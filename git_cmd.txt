touch index.html 新建index.html
cat index.html  查看文件内容
ctrl+c 退出到命令行

cd更换路径、mkdir 新建文件夹、dir查看当前目录文件、ls查看、clear清屏


vi使用：
vi index.html  使用vi编辑index.dex
i 插入内容
ESC 退出编辑
:w 保存
:wq 保存并退出
:e! 撤销新编辑内容
:q! 撤销并退出


Git

初始化git仓库
git init

用户信息配置
git config --global user.name "zhucheng2"
git config --global user.email "1260750674@qq.com"

显示中文
git config --global core.quotepath false

把文件add到 .git仓库(暂存区)
git add ./index.html  把当前路径下的index.html文件 放入暂存区
git add ./  把当前路径下的 所有修改的文件 放入暂存区

把文件commit到 .git仓库
git commit -m "commit描述"
git commit --all -m "commit描述"   把当前路径下的 所有修改的文件 放入 .git仓库

查看当前状态
git status

查看提交日志
git log 查看历史提交日志(每次的commit完整版本号、作者、日期、commit描述)
git log --oneline 查看简洁日志(每次的commit版本号、commit描述)
git reflog 查看每次的操作记录(每次操作的版本号、Head标识、操作描述)

回到指定版本
git reset --hard Head~0 回退到 最新一次 代码提交的状态
git reset --hard Head~1 回退到 上上次 代码提交的状态
git reset --hard xxxxxx(版本号) 回退到指定 代码提交状态

分支(主支master)
git branch develop 创建 develop分支
git checkout develop 切换到develop分支
git merge develop (同一个文件名内容合并 与develop内容相一致) 合并后要立即commit


git branch -a 或 git branch -r  查看当前 .git仓库 所有分支(查看如github远程仓库分支的话,需要先clone到本地再切换到对应的 .git仓库所在目录)



GitHub

从本地 .git仓库 提交代码到 https://github.com 主支
git push https://github.com/zhucheng2/zhucheng2.github.io.git master

从 GitHub获取项目代码(clone会覆盖本地git仓库内容，pull只会与本地内容合并)
git pull https://github.com/zhucheng2/zhucheng2.github.io.git (master)
git clone https://github.com/zhucheng2/zhucheng2.github.io.git [项目名默认为文件夹名]。可直接clone，不需要先git init

origin 替代https://github.com/zhucheng2/zhucheng2.github.io.git
git remote add origin https://github.com/zhucheng2/zhucheng2.github.io.git 添加新的远程仓库关联
git remote remove <name>  删除指定的远程仓库关联
git remote 查看关联的远程仓库名称,如origin
git remote -v 查看关联的远程仓库的详细信息

git push(pull) origin -u master 加上-u，第一次这样push(pull)后，以后可以直接git push(pull)


删除远程仓库的分支sdd(例如主支master,分支sdd)
git push origin :sdd
或git push origin --delete sdd


删除github上的 file文件【保留工作区中的file文件】
1.git rm --cached -r file
2.git commit -m "删除GitHub上的file文件夹"









Github pages 与Hexo博客搭建步骤（命令）
安装必备【GitHub账号，已安装node和git】
(Windows或git命令行输入：)
1.查询node和git是否已安装好，安装成功会有版本提示
git version
node -v

2.1.D盘新建文件夹，文件夹名如 hexo
2.2. cd d:/hexo
2.3. npm install -g hexo-cli 安装hexo
2.4. hexo -v 或hexo version  安装成功hexo会有版本信息
2.5. hexo init bolg  初始化hexo并把加载的文件放入当前目录下新建的blog文件夹
2.6. cd d:/hexo/blog 必须切换至blog路径才能继续操作
2.7. hexo install
2.8. hexo server 或hexo s  启动服务器,会出现hexo is running at http://localhost:4000
2.9.浏览器访问 http://localhost:4000就能看到hexo默认主题

3.1.打开GitHub,master主支下新建zhucheng2.github.io仓库,zhucheng2为GitHub用户名
3.2.配置D:/hexo/blog/_config.yml
deploy:
  type: git
  repo: https://github.com/zhucheng2/zhucheng2.github.io.git
  branch: master
3.3.命令行输入npm install hexo-deployer-git --save  插件安装成功后会+hexo-deployer-git@x.x.x
3.4.hexo g -d  每次本地添加新md文章,就以此生成静态页面发布到服务器
